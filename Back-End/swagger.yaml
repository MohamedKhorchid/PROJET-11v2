swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error





   



  /accounts/{accountsId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get all transactions for a specific account
      description: API to retrieve all transactions for a specific account
      parameters:
        - in: path
          name: accountsId
          required: true
          type: integer
          description: ID of the account selected
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/TransactionList'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /accounts/{accountsId}/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get informations of a specific transaction
      description: API to retrieve informations of a specific transaction from all transactions
      parameters:
        - in: path
          name: accountsId
          required: true
          type: integer
          description: ID of the account selected
        - in: path
          name: transactionId
          required: true
          type: integer
          description: ID of the transaction selected
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          
  /accounts/{accountsId}/transactions/{transactionId}/category:
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Change transaction category
      description: API to change the category of a specific transaction
      parameters:
        - in: path
          name: transactionId
          required: true
          type: integer
          description: ID of the transaction to update 
        - in: path
          name: accountsId
          required: true
          type: integer 
          description: ID of the account selected
        - in: body
          name: body
          description: Category payload
          required: true
          schema:
            $ref: '#/definitions/Category'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction category updated successfully
          schema:
            $ref: '#/definitions/CategoryResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found  
        '500':
          description: Internal Server Error
          
  /accounts/{accountsId}/transactions/{transactionId}/note:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Add note to transaction
      description: API to add a note to a specific transaction
      parameters:
        - in: path
          name: transactionId
          required: true
          type: integer
          description: ID of the transaction to update
        - in: path
          name: accountsId
          required: true
          type: integer
          description: ID of the account selected
        - in: body
          name: body
          description: Note payload
          required: true
          schema:
            $ref: '#/definitions/Note'
      produces:
        - application/json
      responses:
        '200':
          description: Note added to transaction successfully
          schema:
            $ref: '#/definitions/NoteResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Delete note to transaction
      description: API to delete a note to a specific transaction
      parameters: 
        - in: path
          name: transactionId
          required: true
          type: integer
          description: ID of the transaction to update
        - in: path
          name: accountsId
          required: true
          type: integer
          description: ID of the account selected
      produces:
        - application/json
      responses:
        '200':
          description: Note added to transaction successfully
          schema:
            $ref: '#/definitions/NoteResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error



securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string



  TransactionList:
    type: object
    properties:
      body: 
        type: array
        items:
          $ref: '#/definitions/Transaction'
  Transaction:
    type: object
    properties:
      id:
        type: integer
      amount:
        type: number
      category:
        type: string
      note:
        type: string
  Category:
    type: object
    properties:
      category:
        type: string
  CategoryResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          category:
            type: string
  Note:
    type: object
    properties:
      note:
        type: string
  NoteResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          note:
            type: string
            